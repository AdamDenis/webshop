{"ast":null,"code":"export class Cart {\n  constructor() {\n    this.items = [];\n  }\n  get totalPrice() {\n    return this.items.reduce((totalPrice, item) => totalPrice + item.price, 0);\n    /*   let totalPrice = 0;\r\n       this.items.forEach(item => totalPrice += item.price);\r\n       return totalPrice;*/\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,IAAI;EAAjBC;IACI,UAAK,GAAe,EAAE;EAO1B;EANI,IAAIC,UAAU;IACV,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAACF,UAAU,EAAEG,IAAI,KAAKH,UAAU,GAAGG,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;IAC7E;;;EAGD","names":["Cart","constructor","totalPrice","items","reduce","item","price"],"sourceRoot":"","sources":["C:\\Users\\dippe\\WebstormProjects\\web-shop\\src\\app\\shared\\models\\Cart.ts"],"sourcesContent":["import {CartItem} from \"./CartItem\";\r\n\r\nexport class Cart {\r\n    items: CartItem[] = [];\r\n    get totalPrice(): number{\r\n        return this.items.reduce((totalPrice, item) => totalPrice + item.price, 0);\r\n     /*   let totalPrice = 0;\r\n        this.items.forEach(item => totalPrice += item.price);\r\n        return totalPrice;*/\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}